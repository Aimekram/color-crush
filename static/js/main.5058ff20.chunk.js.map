{"version":3,"sources":["styledComponents/GlobalStyle.js","helpers/getAdjacentBlocks.js","helpers/containsObject.js","helpers/checkAdjacentBlocks.js","constants.js","styledComponents/styled.js","components/BoardItem/index.js","actions/index.js","components/Board/index.js","components/Score/index.js","components/App/index.js","helpers/getRandomColor.js","helpers/generateItems.js","helpers/moveColors.js","helpers/deleteBlock.js","reducers/index.js","store.js","index.js"],"names":["GlobalStyles","createGlobalStyle","getAdjacentBlocks","data","col","row","color","undefined","containsObject","array","object","some","item","checkAdjacentBlocks","event","clicked","parseInt","target","dataset","this","findSameColorAdjacent","filter","block","same","toDelete","length","map","push","shift","COLORS","StyledBoard","styled","ul","COLUMNS_COUNT","ROWS_COUNT","StyledItem","li","props","StyledScore","h2","ErrorInfo","p","BoardItem","dispatch","useDispatch","useSelector","state","board","data-col","data-row","onClick","type","payload","changeBlocks","Board","colIndex","rowIndex","Score","score","App","getRandomColor","Math","floor","random","generateItems","Array","from","i","moveColors","column","movedColors","filteredColumn","deleteBlock","prevCol","prevColIndex","index","initialState","boardItemsReducer","action","points","newBoard","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5058ff20.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nul {\r\n  list-style: none;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n`","// get colors of all 4 adjacent blocks - top, right, bottom, left\r\nconst getAdjacentBlocks = (data, col, row) => [\r\n    {col, row: row-1, color: row === 0 ? undefined : data[col][row-1]},\r\n    {col: col+1, row, color: !data[col+1] ? undefined : data[col+1][row]},\r\n    {col, row: row+1, color: data[col][row+1]}, \r\n    {col: col-1, row, color: col === 0 ? undefined : data[col-1][row]}\r\n]\r\n\r\nexport default getAdjacentBlocks;","const containsObject = (array, object) => array.some(item => item.col === object.col && item.row === object.row)\r\n\r\nexport default containsObject;","import getAdjacentBlocks from \"./getAdjacentBlocks\";\r\nimport containsObject from \"./containsObject\";\r\n\r\nconst checkAdjacentBlocks = (event, data) => {\r\n    const clicked = {\r\n        col: parseInt(event.target.dataset.col), \r\n        row: parseInt(event.target.dataset.row),\r\n        get color() {\r\n            return data[this.col][this.row] \r\n        },\r\n    };\r\n    \r\n    // find adjacent blocks with same color as clicked\r\n    const findSameColorAdjacent = (col, row) => getAdjacentBlocks(data, col, row).filter(block => block.color === clicked.color)\r\n\r\n    // make array of blocks with color same as clicked\r\n    let same = findSameColorAdjacent(clicked.col, clicked.row)\r\n    \r\n    // create array to store unique blocks with same color as clicked\r\n    const toDelete = [{...clicked}]\r\n    \r\n    // get same color adjacent blocks for next blocks\r\n    while(same.length) {\r\n        findSameColorAdjacent(same[0].col, same[0].row).map(item => { \r\n            if(!containsObject(toDelete, item)) { \r\n                same.push(item) \r\n            } \r\n        })\r\n        if(!containsObject(toDelete, same[0])) {\r\n            toDelete.push(same[0])\r\n        }\r\n        same.shift()\r\n    }\r\n    \r\n    return toDelete\r\n}\r\n\r\nexport default checkAdjacentBlocks;","export const COLORS = [\"purple\", \"green\", \"red\", \"yellow\", \"DarkTurquoise\"]\r\nexport const ROWS_COUNT = 5;\r\nexport const COLUMNS_COUNT = 7;\r\n","import styled from \"styled-components\";\r\nimport {ROWS_COUNT, COLUMNS_COUNT} from \"../constants\";\r\n\r\nexport const StyledBoard = styled.ul`\r\n  width: ${COLUMNS_COUNT*100}px;\r\n  height: ${ROWS_COUNT*100}px;\r\n  box-shadow: 8px 8px 0 4px black;\r\n  border-radius: 8px;\r\n  margin: 50px auto;\r\n  display: flex;\r\n  flex-flow: column wrap;\r\n  background-color: black;\r\n`\r\n\r\nexport const StyledItem = styled.li`\r\n  width: 100px;\r\n  height: 100px;\r\n  border: 6px solid black;\r\n  border-radius: 10px;\r\n  cursor: pointer;\r\n  background-color: ${props => props.color};\r\n  background-blend-mode: multiply;\r\n\r\n  &:hover {\r\n     opacity: .6; \r\n  }\r\n`\r\n\r\nexport const StyledScore = styled.h2`\r\n  font-size: 3rem;\r\n  text-align: center;\r\n  margin-top: 10vh;\r\n`\r\n\r\nexport const ErrorInfo = styled.p`\r\n  color: white;\r\n`","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { changeBlocks } from \"../../actions\";\r\n\r\nimport checkAdjacentBlocks from \"../../helpers/checkAdjacentBlocks\";\r\n\r\nimport { StyledItem } from \"../../styledComponents/styled\";\r\n\r\nconst BoardItem = ({ color, col, row }) => {\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(state => state.board)\r\n\r\n    const handleClick = event => {\r\n        const toDelete = checkAdjacentBlocks(event, data)\r\n        toDelete.length > 1 && dispatch(changeBlocks(toDelete))\r\n    }\r\n\r\n    return <StyledItem color={color} data-col={col} data-row={row} onClick={handleClick}/>\r\n}\r\n\r\nexport default BoardItem;","export const changeBlocks = toDelete => ({\r\n    type: \"CLICK_HANDLED\",\r\n    payload: { toDelete }\r\n});","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport BoardItem from \"../BoardItem\";\r\nimport { StyledBoard, ErrorInfo } from \"../../styledComponents/styled\";\r\n\r\nconst Board = () => {\r\n    const data = useSelector(state => state.board)\r\n\r\n    return (\r\n        <StyledBoard>\r\n            {!!data ? \r\n                data.map((col, colIndex) => { \r\n                    return col.map((color, rowIndex) => { \r\n                        return <BoardItem key={`boarditem-${colIndex}-${rowIndex}`} color={color} col={colIndex} row={rowIndex}/>\r\n                    })\r\n                })\r\n                : \r\n                <ErrorInfo>Oups, there's problem with store connection</ErrorInfo>\r\n            }\r\n        </StyledBoard>\r\n    )\r\n}\r\n\r\nexport default Board;","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport { StyledScore } from \"../../styledComponents/styled\";\r\n\r\nconst Score = () => {\r\n    const score = useSelector(state => state.score)\r\n\r\n    return <StyledScore>Your score: {score}</StyledScore>\r\n}\r\n\r\nexport default Score;","import React from \"react\";\nimport { GlobalStyles } from \"../../styledComponents/GlobalStyle\";\n\nimport Board from \"../Board\";\nimport Score from \"../Score\";\n\n\nconst App = () => {\n  return (\n    <>\n      <GlobalStyles />\n      <Score />\n      <Board />\n    </>\n  );\n}\n\nexport default App;\n","import { COLORS } from \"../constants\";\r\n\r\nconst getRandomColor = () => COLORS[Math.floor(Math.random() * COLORS.length)]\r\n\r\nexport default getRandomColor;","import getRandomColor from \"./getRandomColor\";\r\nimport { ROWS_COUNT, COLUMNS_COUNT } from \"../constants\";\r\n\r\nconst itemsCount = ROWS_COUNT*COLUMNS_COUNT;\r\n\r\nconst generateItems = () => {\r\n    const data = Array.from(Array(COLUMNS_COUNT), ()=> []);\r\n    for(let i=0; i < itemsCount; i++) { \r\n        const color = getRandomColor();\r\n        const colIndex = [Math.floor(i/ROWS_COUNT)];\r\n        data[colIndex].push(color);\r\n    }\r\n    return data\r\n}\r\n\r\nexport default generateItems;","import getRandomColor from \"./getRandomColor\";\r\n\r\nconst moveColors = column => {\r\n    const movedColors = []\r\n    const filteredColumn = column.filter(item => {\r\n        if(item === \"white\") {\r\n            movedColors.push(getRandomColor())\r\n            return false\r\n        }\r\n        return true\r\n    }) \r\n    movedColors.push(...filteredColumn)\r\n\r\n    return movedColors\r\n}\r\n\r\nexport default moveColors;","const deleteBlock = (board, col, row) => {\r\n    return board.map((prevCol, prevColIndex) => {\r\n        if(prevColIndex === col) { \r\n            return board[col].map((color, index) => index === row ? \"white\" : color)\r\n        }\r\n        return prevCol;\r\n    })\r\n}\r\n\r\nexport default deleteBlock;","import generateItems from \"../helpers/generateItems\";\r\nimport moveColors from \"../helpers/moveColors\";\r\nimport deleteBlock from \"../helpers/deleteBlock\";\r\n\r\nconst initialState = generateItems();\r\n\r\nconst boardItemsReducer = (state = {board: initialState, score: 0}, action) => {\r\n    switch(action.type) {\r\n        case \"CLICK_HANDLED\":\r\n            const points = action.payload.toDelete.length;\r\n\r\n            // generate changed board after click\r\n            action.payload.toDelete.map(item => state.board = deleteBlock(state.board, item.col, item.row));\r\n            const newBoard = state.board.map(column => moveColors(column));\r\n\r\n            return {...state,\r\n                        board: newBoard,\r\n                        score: state.score + points\r\n                    }   \r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}\r\n        \r\nexport default boardItemsReducer;","import { createStore } from \"redux\";\r\n\r\nimport reducer from \"./reducers\";\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n)\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\n\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}